version: '3'
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: always
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_DELETE_TOPIC_ENABLE=true
    restart: always
    depends_on:
      - 'zookeeper'
  initializer:
    image: 'bitnami/kafka:latest'
    depends_on:
      - 'kafka'
    entrypoint: '/bin/bash'
    command: >
      -c "sleep 15 ;
      kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 2 --topic flows ;
      kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 2 --topic flows-processed;"
  goflow:
    #image: 'cloudflare/goflow:latest'
    build: /root/go/src/github.com/demonix/goflow
    depends_on:
      - 'initializer'
    ports:
      - '8080:8080'
      - '6343:6343/udp'
      - '29996:2055/udp'
    restart: always
    entrypoint: '/bin/sh'
    command: >
      -c "sleep 15 ;
      /goflow -kafka.brokers kafka:9092
      -kafka.topic flows"
  grafana:
    image: 'grafana/grafana:latest'
    ports:
      - '3000:3000'
    restart: always
    volumes:
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
  prometheus:
    image: 'prom/prometheus'
    ports:
      - '9090:9090'
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  postgres:
    image: postgres:latest
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: flows
    restart: always
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
  processor:
    build: ../processor
    restart: always
    command: >
      -kafka.input.brokers kafka:9092 -kafka.input.topic flows -flush.count 5000
      -kafka.output.brokers kafka:9092 -kafka.output.topic flows-processed


  inserter:
    build: ../inserter
    restart: always
    command: >
      -kafka.brokers kafka:9092 -kafka.topic flows-processed -flush.count 5000
      -postgres.host postgres -postgres.port 5432 -postgres.pass flows
